!function(e,r,t){r.module("app",["templates","app.user","app.repo","app.common","app.components","ui.router","angular-loading-bar"]).constant("config",{site:{},api:{root:"https://api.github.com",users:"/users",config:{}}}).config(["$stateProvider","$urlRouterProvider","$locationProvider","cfpLoadingBarProvider",function(e,r,t,o){o.includeSpinner=!1,r.when("/user/{username}","/user/{username}/repos"),e.state("user",{url:"/user/{username}",controller:"UserController",templateUrl:"user/user-template.html",data:{pageTitle:"User"}}).state("user.repos",{url:"/repos",controller:"ReposController",templateUrl:"user/repos/repos-template.html",data:{pageTitle:"Repository"}}).state("user.repo",{url:"/{repo}",controller:"RepoController",templateUrl:"repo/repo-template.html",data:{pageTitle:"Repository"}}),t.hashPrefix("!")}]).run(["$rootScope",function(){}]),r.module("app.user",[]),r.module("app.repo",[]),r.module("app.common",[]),r.module("app.components",[]),r.module("app").controller("AppController",["$scope","$log","$state","$stateParams","GitHubService","MessageService",function(e,o,a,n,s,u){e.$on("$stateChangeSuccess",function(t,o){r.isDefined(o.data.pageTitle)&&(e.pageTitle=o.data.pageTitle)}),e.messages=u.messages,e.submit=function(){e.username!==t&&""!==e.username&&(n.username=e.username,a.transitionTo("user",n))}}]),r.module("app.repo").controller("RepoController",["$scope","$stateParams","$location","$log","GitHubService",function(e,r,o,a,n){function s(e){var r=400,t=400,o=t/2,n=d3.scale.category20c(),s=[],u=0;_.forEach(e,function(e){u=Math.max(e,u)}),_.forEach(e,function(e,r){var t=!1;if(e!==u){var o=e/u;o>=.02&&(a.log("maxValue "+u+" value "+e+" % "+o),t=!0)}else a.log("maxValue "+u+" is value "+e),t=!0;t&&(a.log(r,e),s.push({label:r,value:e}))});var i=d3.select("#chart").append("svg:svg").data([s]).attr("width",r).attr("height",t).append("svg:g").attr("transform","translate("+o+","+o+")"),c=d3.layout.pie().value(function(e){return e.value}),p=d3.svg.arc().outerRadius(o),l=i.selectAll("g.slice").data(c).enter().append("svg:g").attr("class","slice");l.append("svg:path").attr("fill",function(e,r){return n(r)}).attr("d",function(e){return p(e)}),l.append("svg:text").attr("transform",function(e){return e.innerRadius=0,e.outerRadius=o,"translate("+p.centroid(e)+")"}).attr("text-anchor","middle").text(function(e,r){return s[r].label})}e.$watch("$parent.repos ",function(){e.$parent.repos!==t&&(a.log("RepoController - init()"),r.repo!==t&&(e.currentRepo=n.getRepoByName(r.repo),a.log("currentRepo",e.currentRepo),n.getData(e.currentRepo.languages_url).then(function(e){s(e)})))})}]),r.module("app.user").controller("UserController",["$scope","$log","$state","$stateParams","GitHubService",function(e,r,o,a,n){a.username!==t&&(r.log("UserController"),e.$parent.username=a.username,n.getUser(a.username,!0).then(function(r){e.user=r}),n.getRepositories(a.username,!0).then(function(r){e.repos=r})),e.goToRepo=function(r){a.username=e.$parent.username,a.repo=r.name,o.transitionTo("user.repo",a)}}]),r.module("app.components").directive("messages",function(){return{restrict:"EA",scope:{messagesData:"="},templateUrl:"common/components/messages-directive-template.html",link:function(e){e.getMessageStyle=function(e){return"error"===e?"flash-error":"success"===e?"flash-success":null}}}}),r.module("app.common").factory("GitHubService",["$q","$http","$log","config","Utils",function(e,t,o,a,n){function s(){}var u=a.api.root+a.api.users,i=a.api.config,c=new s;return c.user={},c.repositories={},c.getUser=function(s,p){if(a.funcName=n.getFunctionName(this,arguments),!_.isEmpty(c.user)&&!p)return e.when(c.user);o.log("GitHubService - Loading user...");var l=t.get(u+"/"+s,i).then(function(e){return c.user=r.copy(e.data),o.log(" GitHubService - User loaded:",c.user),c.user});return l},c.getRepositories=function(s,p){if(a.funcName=n.getFunctionName(this,arguments),!_.isEmpty(c.repositories)&&!p)return e.when(c.repositories);o.log("GitHubService - Loading repos...");var l=t.get(u+"/"+s+"/repos",i).then(function(e){return c.repositories=r.copy(e.data),o.log(" GitHubService - Repos loaded:",c.repositories),c.repositories});return l},c.getData=function(e){a.funcName=n.getFunctionName(this,arguments),o.log("GitHubService - Loading data from "+e+" ...");var r=t.get(e,i).then(function(r){return o.log(" GitHubService - Data from "+e+" loaded:",r.data),r.data});return r},c.getRepoByName=function(e){return _.find(c.repositories,{name:e})},c}]),r.module("app.common").factory("HttpInterceptor",["$q","$log","MessageService",function(e,r,t){var o={};return o.request=function(e){return e},o.requestError=function(o){return r.error("HttpInterceptor - requestError - rejection:"),r.log(o),t.addServiceErrorMessage(o),e.reject(o)},o.response=function(o){return"null"===o.data?(r.error("HttpInterceptor - response - error:"),r.log(o),t.addServiceErrorMessage(o),e.reject("Service failed to return data")):"OK"===o.data.status?o:"ERROR"===o.data.status?(r.error("HttpInterceptor - response - error:"),r.log(o),t.addServiceErrorMessage(o),e.reject(o.data.error.message)):o},o.responseError=function(o){return r.error("HttpInterceptor - responseError - rejection:"),r.log(o),t.addServiceErrorMessage(o,!0),e.reject(o)},o}]).config(["$httpProvider",function(e){e.interceptors.push("HttpInterceptor")}]),r.module("app.common").factory("MessageService",["$log",function(e){function r(){}var o=new r;return o.messages=[],o.messageTypes={},o.messageTypes.ERROR="error",o.messageTypes.SUCCESS="success",o.addServiceErrorMessage=function(r,a){var n={};n.response=r,n.messageType=o.messageTypes.ERROR;var s="A bad thing happened.",u=s;r.data.message&&""!==r.data.message&&(u=r.data.message),200!==r.status&&r.statusText&&""!==r.statusText&&(u+=" - "+r.status+" : "+r.statusText);var i;r.config!==t&&(r.config.funcName!==t?i=r.config.funcName:r.config.data!==t&&r.config.data.funcName!==t&&(i=r.config.data.funcName)),a&&u===s&&(u="API call rejected."),i!==t&&(n.message=i+" : "+u),e.log("Error message:",n),o.messages.push(n)},o.addSuccessMessage=function(e){var r={};r.message=e,r.messageType=o.messageTypes.SUCCESS,o.messages.push(r)},o}]),r.module("app.common").factory("Utils",function(){var e={};return e.isUndefinedOrNull=function(e){return!r.isDefined(e)||null===e},e.getFunctionName=function(e,r){var t=r.callee.name;return""===t&&(t="anonymousFunc"),e.constructor.name+"."+t},e}),r.module("app.repo").controller("ReposController",["$scope","$stateParams","$location","$log","GitHubService",function(e,r,t,o){o.log("ReposController")}])}(window,window.angular);